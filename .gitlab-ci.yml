image: python:3.10

# Cache Python dependencies
cache:
  paths:
    - .cache/pip
    - venv/

# Define stages
stages:
  - test
  - build
  - deploy

# Variables
variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  VENV_PATH: "${CI_PROJECT_DIR}/venv"
  COMPOSIO_CACHE_DIR: "${CI_PROJECT_DIR}/.composio"

# Before script - runs before each job
before_script:
  - python --version
  - pip install virtualenv
  - virtualenv $VENV_PATH
  - source $VENV_PATH/bin/activate
  - pip install --upgrade pip setuptools wheel
  - pip install -r requirements.txt
  - pip install -e .
  - mkdir -p $COMPOSIO_CACHE_DIR

# Linting job
lint:
  stage: test
  script:
    - pip install black flake8 mypy
    - black --check --diff .
    - flake8 .
    - mypy .

# Testing job
test:
  stage: test
  script:
    - pip install pytest pytest-cov
    - pytest --cov=./ --cov-report=xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  coverage: '/^TOTAL.*\s+(\d+\%)$/'  # Adjust the regex based on your coverage output

# Build job
build:
  stage: build
  script:
    - echo "Building the application..."
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

# Deploy job (example - customize based on your deployment needs)
deploy_staging:
  stage: deploy
  script:
    - echo "Deploying to staging environment..."
    # Add your deployment commands here
    # Example: scp -r dist/ user@staging-server:/path/to/deploy
  environment:
    name: staging
    url: https://staging.example.com  # Update with your staging URL
  only:
    - main  # Only deploy when changes are pushed to main branch

# Deploy to production (example - customize as needed)
deploy_prod:
  stage: deploy
  script:
    - echo "Deploying to production..."
    # Add your production deployment commands here
  environment:
    name: production
    url: https://example.com  # Update with your production URL
  when: manual  # Requires manual approval in GitLab UI
  only:
    - tags  # Only deploy when a new tag is created
