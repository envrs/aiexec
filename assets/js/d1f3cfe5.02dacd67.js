"use strict";(self.webpackChunkaiexec_docs=self.webpackChunkaiexec_docs||[]).push([[9986],{4392:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"Deployment/deployment-architecture","title":"Aiexec architecture on Kubernetes","description":"There are two broad types of Aiexec deployments:","source":"@site/docs/Deployment/deployment-architecture.mdx","sourceDirName":"Deployment","slug":"/deployment-architecture","permalink":"/deployment-architecture","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Aiexec architecture on Kubernetes","slug":"/deployment-architecture"},"sidebar":"docs","previous":{"title":"Deploy Aiexec on a remote server","permalink":"/deployment-caddyfile"},"next":{"title":"Best practices","permalink":"/deployment-prod-best-practices"}}');var s=i(74848),r=i(28453);const o={title:"Aiexec architecture on Kubernetes",slug:"/deployment-architecture"},c=void 0,l={},a=[{value:"Benefits of deploying Aiexec on Kubernetes",id:"benefits-of-deploying-aiexec-on-kubernetes",level:2},{value:"Aiexec deployment",id:"aiexec-deployment",level:2},{value:"Environment isolation",id:"environment-isolation",level:2},{value:"Next steps",id:"next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"There are two broad types of Aiexec deployments:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Aiexec IDE (development)"}),": Deploy both the Aiexec visual editor (frontend) and API (backend). Typically, this is used for development environments where developers use the visual editor to create and manage flows before packaging and serving them through a production runtime deployment."]}),"\n",(0,s.jsxs)(n.p,{children:["The Aiexec repository's example ",(0,s.jsx)(n.a,{href:"https://github.com/khulnasoft/aiexec/blob/main/docker_example/docker-compose.yml",children:(0,s.jsx)(n.code,{children:"docker-compose.yml"})})," file builds a Aiexec IDE image."]}),"\n",(0,s.jsxs)(n.p,{children:["For information about IDE deployments on Kubernetes, see ",(0,s.jsx)(n.a,{href:"/deployment-kubernetes-dev",children:"Deploy the Aiexec development environment on Kubernetes"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Aiexec runtime (production)"}),": Deploy the Aiexec runtime for production flows, which is headless (backend only) service focused on serving the Aiexec API. This is used for production environments where flows are executed programmatically without the need for the visual editor. The server exposes your flows as endpoints, and then runs only the processes necessary to serve each flow."]}),"\n",(0,s.jsx)(n.p,{children:"An external PostgreSQL database is strongly recommended with this deployment type to improve scalability and reliability as compared to the default SQLite database."}),"\n",(0,s.jsxs)(n.p,{children:["For information about runtime deployments on Kubernetes, see ",(0,s.jsx)(n.a,{href:"/deployment-kubernetes-prod",children:"Deploy the Aiexec production environment on Kubernetes"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["You can start Aiexec in headless mode with the ",(0,s.jsx)(n.code,{children:"AIEXEC_BACKEND_ONLY"})," ",(0,s.jsx)(n.a,{href:"/environment-variables",children:"environment variable"}),"."]})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can also ",(0,s.jsx)(n.a,{href:"/deployment-docker",children:"deploy the Aiexec IDE and runtime on Docker"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"benefits-of-deploying-aiexec-on-kubernetes",children:"Benefits of deploying Aiexec on Kubernetes"}),"\n",(0,s.jsx)(n.p,{children:"Deploying on Kubernetes offers the following advantages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Scalability"}),": Kubernetes allows you to scale the Aiexec service to meet the demands of your workload."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Availability and resilience"}),": Kubernetes provides built-in resilience features, such as automatic failover and self-healing, to ensure that the Aiexec service is always available."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Security"}),": Kubernetes provides security features, such as role-based access control and network isolation, to protect the Aiexec service and its data."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Portability"}),": Kubernetes is a portable platform, which means that you can deploy the Aiexec service to any Kubernetes cluster, on-premises or in the cloud."]}),"\n",(0,s.jsxs)(n.p,{children:["Aiexec can be deployed on cloud platforms like AWS EKS, Google GKE, or Azure AKS. For more information, see the ",(0,s.jsx)(n.a,{href:"https://github.com/khulnasoft/aiexec",children:"Aiexec Helm charts repository"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"aiexec-deployment",children:"Aiexec deployment"}),"\n",(0,s.jsx)(n.p,{children:"A typical Aiexec deployment includes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Aiexec services"}),": The Aiexec API and, for IDE deployments, the visual editor."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Kubernetes cluster"}),": The Kubernetes cluster provides a platform for deploying and managing Aiexec and its supporting services."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Persistent storage"}),": Persistent storage is used to store the Aiexec service's data, such as models and training data."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ingress controller"}),": The ingress controller provides a single entry point for traffic to the Aiexec service."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Load balancer"}),": Balances traffic across multiple Aiexec replicas."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Vector database"}),": If you are using Aiexec for RAG, you can integrate with the vector database in Astra Serverless."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Aiexec reference architecture on Kubernetes",src:i(88956).A+"",width:"671",height:"361"})}),"\n",(0,s.jsx)(n.h2,{id:"environment-isolation",children:"Environment isolation"}),"\n",(0,s.jsx)(n.p,{children:"It is recommended to deploy and run separate development and production environments for Aiexec:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Deploy the IDE in your development environment where your developers prototype and test new flows."}),"\n",(0,s.jsx)(n.li,{children:"Deploy the runtime in your production environment to serve flows as standalone services."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Aiexec environments",src:i(53856).A+"",width:"601",height:"491"})}),"\n",(0,s.jsx)(n.p,{children:"This separation is designed to enhance security, support an organized software development pipeline, and optimize infrastructure resource allocation:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Isolation"}),": By separating the development and production environments, you can better isolate different phases of the application lifecycle. This isolation minimizes the risk of development-related issues impacting the production environments."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Access control"}),": Different security policies and access controls can be applied to each environment. Developers may require broader access in the IDE for testing and debugging, while the runtime environment can be locked down with stricter security measures."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reduced attack surface"}),": The runtime environment is configured to include only essential components, reducing the attack surface and potential vulnerabilities."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Optimized resource usage and cost efficiency"}),": By separating the two environments, you can allocate resources more effectively. Each flow can be deployed independently, providing fine-grained resource control."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scalability"}),": The runtime environment can be scaled independently based on application load and performance requirements, without affecting the development environment."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/deployment-prod-best-practices",children:"Best practices for Aiexec on Kubernetes"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/deployment-kubernetes-dev",children:"Deploy the Aiexec development environment on Kubernetes"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/deployment-kubernetes-prod",children:"Deploy the Aiexec production environment on Kubernetes"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},53856:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/aiexec-env-f22dcd672ba806af9fec3968171a4700.png"},88956:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/aiexec-reference-architecture-49ff76b7f84ce43f5626edd5cb3fa7fa.png"}}]);